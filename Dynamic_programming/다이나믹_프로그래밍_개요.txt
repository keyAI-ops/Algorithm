# 다이나믹 프로그래밍
  - 메모리를 적절히 사용하여 수행 시간 효율성을 비약적으로 향상시키는 방법
  - 이미 계산된 결과는 별도의 메모리 영역에 저장하여 다시 계산하지 않음
  - 다이나믹 프로그래밍 구현은 일반적으로 두 가지 방식(탑다운, 보텀업)으로 구성

# 다음의 조건을 만족할 때 사용 가능
  1. 최적 부분 구조
     - 큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아서 큰 문제를 해겨랄 수 있다.
  2. 중복되는 부분 문제
     - 동일한 작은 문제를 반복적으로 해결

# 메모리제이션
  - 다이나믹 프로그래밍을 구현하는 방법 중 하나
  - 한 번 계산한 결과를 메모리 공간에 메모하는 기법
    * 같은 문제를 다시 호출하면 메모했던 결과를 그대로 가져옵니다. / 값을 기록해 놓는다는 점에서 캐싱이라고 합니다.

# 탑다운
  - 메모리제이션 기법 사용 / 하향식

# 보텀업
  - 다이나믹 프로그래밍의 전형적인 형태 / 상향식
  - 결과 저장용 리스트는 DP 테이블이라고 부름. 